{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","routes.js","hooks/auth.hook.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","async","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","key","_id","from","to","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","placeholder","id","type","value","onChange","e","target","onKeyPress","event","push","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","marginRight","disabled","onClick","useRoutes","path","exact","useAuth","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","Navbar","padding","preventDefault","App","routes","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a88d7ed.chunk.js","sourcesContent":["import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n\r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Что-то пошло не так')\r\n      }\r\n\r\n      setLoading(false)\r\n\r\n      return data\r\n    } catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), [])\r\n\r\n  return { loading, request, error, clearError }\r\n}\r\n","import {createContext} from 'react'\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false\r\n})\r\n","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n  <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const LinksList = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\">Ссылок пока нет</p>\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>№</th>\r\n        <th>Оригинальная</th>\r\n        <th>Сокращенная</th>\r\n        <th>Открыть</th>\r\n      </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      { links.map((link, index) => {\r\n        return (\r\n          <tr key={link._id}>\r\n            <td>{index + 1}</td>\r\n            <td>{link.from}</td>\r\n            <td>{link.to}</td>\r\n            <td>\r\n              <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }) }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinksList} from '../components/LinksList'\r\n\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([])\r\n  const {loading, request} = useHttp()\r\n  const {token} = useContext(AuthContext)\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request('/api/link', 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setLinks(fetched)\r\n    } catch (e) {}\r\n  }, [token, request])\r\n\r\n  useEffect(() => {\r\n    fetchLinks()\r\n  }, [fetchLinks])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && <LinksList links={links} />}\r\n    </>\r\n  )\r\n}\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport const CreatePage = () => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp()\r\n  const [link, setLink] = useState('')\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const pressHandler = async event => {\r\n    if (event.key === 'Enter') {\r\n      try {\r\n        const data = await request('/api/link/generate', 'POST', {from: link}, {\r\n          Authorization: `Bearer ${auth.token}`\r\n        })\r\n        history.push(`/detail/${data.link._id}`)\r\n      } catch (e) {}\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Вставьте ссылку\"\r\n            id=\"link\"\r\n            type=\"text\"\r\n            value={link}\r\n            onChange={e => setLink(e.target.value)}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"link\">Введите ссылку</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LinkCard = ({ link }) => {\r\n  return (\r\n    <>\r\n      <h2>Ссылка</h2>\r\n\r\n      <p>Ваша ссылка: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n      <p>Откуда: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n      <p>Количество кликов по ссылке: <strong>{link.clicks}</strong></p>\r\n      <p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\r\n    </>\r\n  )\r\n}\r\n","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinkCard} from '../components/LinkCard'\r\n\r\nexport const DetailPage = () => {\r\n  const {token} = useContext(AuthContext)\r\n  const {request, loading} = useHttp()\r\n  const [link, setLink] = useState(null)\r\n  const linkId = useParams().id\r\n\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setLink(fetched)\r\n    } catch (e) {}\r\n  }, [token, linkId, request])\r\n\r\n  useEffect(() => {\r\n    getLink()\r\n  }, [getLink])\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { !loading && link && <LinkCard link={link} /> }\r\n    </>\r\n  )\r\n}\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {useMessage} from '../hooks/message.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext)\r\n  const message = useMessage()\r\n  const {loading, request, error, clearError} = useHttp()\r\n  const [form, setForm] = useState({\r\n    email: '', password: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    message(error)\r\n    clearError()\r\n  }, [error, message, clearError])\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const changeHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request('/api/auth/register', 'POST', {...form})\r\n      message(data.message)\r\n    } catch (e) {}\r\n  }\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request('/api/auth/login', 'POST', {...form})\r\n      auth.login(data.token, data.userId)\r\n    } catch (e) {}\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1>Сократи Ссылку</h1>\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n            <div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите email\"\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  className=\"yellow-input\"\r\n                  value={form.email}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите пароль\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"yellow-input\"\r\n                  value={form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Пароль</label>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn yellow darken-4\"\r\n              style={{marginRight: 10}}\r\n              disabled={loading}\r\n              onClick={loginHandler}\r\n            >\r\n              Войти\r\n            </button>\r\n            <button\r\n              className=\"btn grey lighten-1 black-text\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Регистрация\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n  return useCallback(text => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text })\r\n    }\r\n  }, [])\r\n}\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {LinksPage} from './pages/LinksPage'\r\nimport {CreatePage} from './pages/CreatePage'\r\nimport {DetailPage} from './pages/DetailPage'\r\nimport {AuthPage} from './pages/AuthPage'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n}\r\n","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null)\r\n  const [ready, setReady] = useState(false)\r\n  const [userId, setUserId] = useState(null)\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n\r\n    localStorage.setItem(storageName, JSON.stringify({\r\n      userId: id, token: jwtToken\r\n    }))\r\n  }, [])\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId)\r\n    }\r\n    setReady(true)\r\n  }, [login])\r\n\r\n\r\n  return { login, logout, token, userId, ready }\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n\r\n  const logoutHandler = event => {\r\n    event.preventDefault()\r\n    auth.logout()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\" style={{ padding: '0 2rem' }}>\r\n        <span className=\"brand-logo\">Сокращение ссылок</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n          <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n          <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport {useRoutes} from './routes'\r\nimport {useAuth} from './hooks/auth.hook'\r\nimport {AuthContext} from './context/AuthContext'\r\nimport {Navbar} from './components/Navbar'\r\nimport {Loader} from './components/Loader'\r\nimport 'materialize-css'\r\n\r\nfunction App() {\r\n  const {token, login, logout, userId, ready} = useAuth()\r\n  const isAuthenticated = !!token\r\n  const routes = useRoutes(isAuthenticated)\r\n\r\n  if (!ready) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      token, login, logout, userId, isAuthenticated\r\n    }}>\r\n      <Router>\r\n        { isAuthenticated && <Navbar /> }\r\n        <div className=\"container\">\r\n          {routes}\r\n        </div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}